name: Publish 🐍 distributions 📦 to PyPI

on:
  push:
    branches:
      - automate-test
jobs:
  build-and-publish:
    name: Build and publish 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Bump Versions
        uses: michmich112/version-bumper@master
        with:
          scheme: semantic
          version-file: "./setup.py"
          files: "[]"
          rules: '[{"trigger":"commit","bump":"build"}, {"trigger":"commit","branch":"release","bump":"major", "reset":["minor","build"]}]'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build a binary wheel and a source tarball
        run: |
          pipenv run build
      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./setup.py").version}`' >> $GITHUB_ENV

      - name: package-version-to-git-tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Publish distribution 📦 to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.Test_PYPI_API_TOKEN }}
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}